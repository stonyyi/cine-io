<h1 id="documentation-for-cine-io-https-www-cine-io-api-">Documentation for <a href="https://www.cine.io">cine.io</a> API.</h1>
<h2 id="about-cine-io">About cine.io</h2>
<p>Cine.io is an api driven live streaming platform. Developers can quickly setup a live streaming app using our global live streaming cdn. Cine.io was designed for immediate usage, getting you setup in your own app in just a few minutes.</p>
<h2 id="getting-started">Getting started</h2>
<p>Start off by creating an account at <a href="https://www.cine.io">cine.io</a> or through the heroku addon marketplace. We will automatically create you a project with a default name of &quot;Development&quot;. You can change your project names at any time. You can create as many projects as you like. Each project will provide you with a unique &quot;Public key&quot; and a &quot;Secret key&quot;. A common usage is to create a different project for your Development and Production environment (perhaps also staging, canary environments, etc.).</p>
<p>Now you have your public and secret keys, let&#39;s review a typical life cycle.</p>
<h2 id="common-request-life-cycle">Common request life cycle</h2>
<h3 id="1-create-a-live-stream">1. Create a live stream</h3>
<p><em>Location: Web Server</em></p>
<p>Every project starts off with 1 live stream. Most likely you&#39;ll want to have more than 1 unique live stream.</p>
<p>Requests normally start off by <em>creating a live stream</em>. This live stream is unique to your project. You&#39;ll get a response back containing a few fields. The most important fields to save in your database is <code>id</code>, and <code>password</code>. You&#39;ll need these fields to play and publish your live stream. You can always fetch the other fields again by issuing a get request to the stream/show endpoint.</p>
<p>End point:</p>
<ul>
<li>method: POST</li>
<li>url: /api/1/-/stream</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
<li>name (optional): any text to help you identify your stream</li>
</ul>
</li>
</ul>
<p>Example: <code>curl -X POST --data &quot;secretKey=MY_SECRET_KEY&amp;name=first%20stream&quot; https://www.cine.io/api/1/-/stream --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="2-publish-a-live-stream">2. Publish a live stream</h3>
<p><em>Location: Web Client</em></p>
<p>Now you&#39;ve saved your stream <code>id</code> and stream <code>password</code>. Using the <a href="https://github.com/cine-io/js-sdk">JS SDK</a>, you&#39;ll need to pass you project&#39;s <em>public key</em> to the client. If your specific user has permission in your application to publish to this stream, then you&#39;ll need to send along the stream <code>id</code> and stream <code>password</code> to your web client. For example, this endpoint would be useful if you are building a &quot;virtual classroom&quot; and the current logged-in user has a &quot;teacher&quot; role.</p>
<p>Publishing a live-stream requires that the logged-in user have Adobe Flash installed and enabled in her browser. The JS SDK will automatically download the correct SWF file and launch it in the user&#39;s browser when <code>start()</code> is called on the publisher.</p>
<p>Example:</p>
<pre><code class="lang-javascript">var streamId = &#39;&lt;STREAM_ID&gt;&#39;
  , password = &#39;&lt;STREAM_PASSWORD&#39;
  , domId = &#39;publisher-example&#39;;

var publisher = CineIO.publish(
  streamId, password, domId
);

publisher.start();</code></pre>
<h3 id="3-play-a-live-stream">3. Play a live stream</h3>
<p><em>Location: Web Client</em></p>
<p>Using the <a href="https://github.com/cine-io/js-sdk">JS SDK</a>, you&#39;ll need to pass you project&#39;s <em>public key</em> to the client. To play a stream using the JS SDK, you only need to send out the stream <code>id</code>. Only serve the stream <code>id</code> to users who have permission to view a stream. For example, in our aforementioned &quot;virtual classroom&quot; application, this endpoint would be useful when the current logged-in user has a &quot;student&quot; role.</p>
<p>Playing a live stream will launch the branded, open-source version of <a href="http://www.jwplayer.com/">JWPlayer</a>. If you have your own JWPlayer license, you can send it as one of the options (key: <code>jwPlayerKey</code>) to the <code>init()</code> function. Mobile devices will use native <code>&lt;video&gt;</code> elements rather than JWPlayer; this happens automatically.</p>
<p>Example:</p>
<pre><code class="lang-javascript">var streamId = &#39;&lt;STREAM_ID&gt;&#39;
  , domId = &#39;player-example&#39;;

CineIO.play(streamId, domId);</code></pre>
<h2 id="additional-end-points">Additional end points</h2>
<h3 id="get-a-live-stream">Get a live stream</h3>
<p><em>Location: Web Server</em></p>
<p>After you have created a live stream you can always fetch the information again. This will return the same fields as the create endpoint.</p>
<p>End point:</p>
<ul>
<li>method: GET</li>
<li>url: /api/1/-/stream</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
<li>id: stream id</li>
</ul>
</li>
</ul>
<p>Example: <code>curl &quot;https://www.cine.io/api/1/-/stream?secretKey=MY_SECRET_KEY&amp;id=streamId&quot; --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="get-all-of-your-streams">Get all of your streams</h3>
<p><em>Location: Web Server</em></p>
<p>You can fetch all of your streams via an api endpoint. Currently pagination is not supported.</p>
<p>End point:</p>
<ul>
<li>method: GET</li>
<li>url: /api/1/-/streams</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
</ul>
</li>
</ul>
<p>Example: <code>curl https://www.cine.io/api/1/-/streams?secretKey=MY_SECRET_KEY --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="update-a-live-stream">Update a live stream</h3>
<p><em>Location: Web Server</em></p>
<p>This will update the stream details. Currently only <code>name</code> is supported.</p>
<p>End point:</p>
<ul>
<li>method: PUT</li>
<li>url: /api/1/-/stream</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
<li>id: stream id</li>
<li>name: any text to help you identify your stream</li>
</ul>
</li>
</ul>
<p>Example: <code>curl -X PUT &quot;https://www.cine.io/api/1/-/stream?secretKey=MY_SECRET_KEY&amp;id=streamId&amp;name=new%20name&quot; --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="delete-a-live-stream">Delete a live stream</h3>
<p><em>Location: Web Server</em></p>
<p>This will delete the stream. Publishing and playing will no longer be available.</p>
<p>End point:</p>
<ul>
<li>method: DELETE</li>
<li>url: /api/1/-/stream</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
<li>id: stream id</li>
</ul>
</li>
</ul>
<p>Example: <code>curl -X DELETE &quot;https://www.cine.io/api/1/-/stream?secretKey=MY_SECRET_KEY&amp;id=streamId&quot; --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="get-the-project-details">Get the project details</h3>
<p><em>Location: Web Server</em></p>
<p>You can fetch your project details via api.</p>
<p>End point:</p>
<ul>
<li>method: GET</li>
<li>url: /api/1/-/project</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
</ul>
</li>
</ul>
<p>Example: <code>curl https://www.cine.io/api/1/-/project?secretKey=MY_SECRET_KEY --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="update-the-project">update the project</h3>
<p><em>Location: Web Server</em></p>
<p>This will update the project details. Currently only <code>name</code> is supported.</p>
<p>End point:</p>
<ul>
<li>method: PUT</li>
<li>url: /api/1/-/project</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
<li>name: a new project name string</li>
</ul>
</li>
</ul>
<p>Example: <code>curl -X PUT https://www.cine.io/api/1/-/project?secretKey=MY_SECRET_KEY&amp;name=new%20name --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="delete-the-project">Delete the project</h3>
<p><em>Location: Web Server</em></p>
<p>This will delete the entire project. Publishing and playing to all associated streams will no longer be available.</p>
<p>End point:</p>
<ul>
<li>method: DELETE</li>
<li>url: /api/1/-/project</li>
<li>response format: JSON</li>
<li>parameters:<ul>
<li>secretKey: CINE_IO_SECRET_KEY</li>
</ul>
</li>
</ul>
<p>Example: <code>curl -X DELETE https://www.cine.io/api/1/-/project?secretKey=MY_SECRET_KEY --header &quot;Content-Type:application/json&quot;</code></p>
<h3 id="health">health</h3>
<p><em>Location: Web Server</em></p>
<p>This is a simple API health check.</p>
<p>End point:</p>
<ul>
<li>method: GET</li>
<li>response format: JSON</li>
<li>url: /api/1/-/health</li>
</ul>
<p>Example: <code>curl https://www.cine.io/api/1/-/health --header &quot;Content-Type:application/json&quot;</code></p>
